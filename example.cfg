# PEERSIM CHORD

random.seed 1234567890
simulation.endtime 10^6
simulation.logtime 10^6

simulation.experiments 1

SIZE 10

network.size SIZE

protocol.link peersim.core.IdleProtocol

protocol.no_delay UniformRandomTransport
{
	mindelay 0
	maxdelay 0
}

protocol.generic_dht DHTProtocol
{
	linkable link
	transport no_delay
#	loop GUIDLoopDetection
}

control.traffic RandomOneWayTraffic
{
	protocol generic_dht
	step 100
}

init.create RandomNetwork 
{
	protocol generic_dht
}

init.rndlink WireKOut
init.rndlink.k 2
init.rndlink.undir
init.rndlink.protocol link

control.degree DegreeStats
{
	n SIZE
	undir
	protocol link
	step 100000
}

control.graphstat GraphStats
{
	nl 25
	nc 25
	undir
	protocol link
	step 100000
}

control.graphfile DHTGraphPrinter
{
	outf data/example/graphs/
	dht generic_dht
	protocol link
	step 100000
	undir
}

control.dump MessageDumpObserver
{
	protocol generic_dht
	outf data/example/dumps/
	step 100000
}

#control.observer MessageCounterObserver
#{
#	protocol my
#	step 90000
#}

#control.dnet DynamicNetwork
#{
#	add 20
#	add -25
#	minsize 3000
#	maxsize 7000
#	step 100000
#	init.0 ChordInitializer
#	{      
#		protocol my
#	}
#}
